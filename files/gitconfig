[core]
  editor = $GIT_EDITOR
  whitespace=fix,-indent-with-non-tab,trailing-space,space-before-tab,cr-at-eol
  excludesfile = ~/.gitignore
  quotepath = false
  # autocrlf = input

[apply]
  whitespace = fix

[user]
	name = jens
	email = hello@somesmall.studio
	username = jens

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[color]
  ui = auto

## aliases:
[alias]
  s  = status
  st = status
  cl = clone
  cf = commit --no-verify
  c  = commit
  qc = commit -m '.'
  call= commit -a
  ca = commit --amend
  a = add
  aa = add --all
  ap = add --patch
  b = branch -v
  co = checkout
  cb = checkout -b
  df = diff
  pall = push --all
  last = log -1 HEAD
  unstage = reset HEAD --
  changes=diff --name-status -r
  diffstat=diff --stat -r
  uncommit = reset --soft HEAD^
  t = tag -l
  r = remote -v

  # SERVE
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

  # LOG
  lg   = log -p
  lol  = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  lp   = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  ls   = ls-files
  lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  lg = !"git lg1"

  # REMOTES
  up = remote update

  unpack-refs = "!bash -c 'IFS=$''\\n''; for f in $(git show-ref --heads); do /bin/echo ''Writing  '' $(echo $f | cut -c42-); echo $(echo $f | cut -c1-40) > \"${GIT_DIR:-.git}/$(echo $f | cut -c42-)\"; done'"
	wa = log --diff-filter=A

[merge]
	tool = opendiff

[github]
	user = "jnslxndr"
  password = !security 2>&1 >/dev/null find-generic-password -gs github.password | ruby -e 'print $1 if STDIN.gets =~ /^password: \\\"(.*)\\\"$/'

[push]
	default = current

[mergetool]
	keepBackup = true

[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[pull]
	rebase = false

[init]
	defaultBranch = main
